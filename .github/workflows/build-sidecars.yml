name: Build and Commit Sidecar Binaries

on:
  workflow_dispatch:
  workflow_call:
    inputs:
      app-version:
        description: Application version for Sentry release
        required: false
        type: string
  push:
    branches: [dev]
    paths:
      - crates/embroiderly-publish/**
      - ".github/workflows/build-sidecars.yml"

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        sidecar: ["embroiderly-publish"]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v5
      - uses: dtolnay/rust-toolchain@stable
      - uses: swatinem/rust-cache@v2

      - name: Get target platform triple
        id: target
        shell: bash
        run: |
          TRIPLE=$(rustc -vV | grep 'host:' | sed 's/host: //')
          echo "TRIPLE=${TRIPLE}" >> $GITHUB_OUTPUT

          EXT=""
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            EXT=".exe"
          fi
          echo "EXT=${EXT}" >> $GITHUB_OUTPUT

      - name: Build sidecar binary
        run: cargo build -p ${{ matrix.sidecar }} --release

      - name: Prepare binary for upload
        shell: bash
        run: |
          mkdir -p binaries/${{ matrix.sidecar }}

          SOURCE_FILE="target/release/${{ matrix.sidecar }}${{ steps.target.outputs.EXT }}"
          DEST_FILE="binaries/${{ matrix.sidecar }}/${{ matrix.sidecar }}-${{ steps.target.outputs.TRIPLE }}${{ steps.target.outputs.EXT }}"
          mv "$SOURCE_FILE" "$DEST_FILE"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: sidecar-binary-${{ matrix.sidecar }}-${{ matrix.os }}
          path: binaries/
          retention-days: 1

      - name: Upload debug symbols for Sentry
        if: inputs.app-version != ''
        uses: actions/upload-artifact@v4
        with:
          name: sidecar-debug-symbols-${{ matrix.sidecar }}-${{ matrix.os }}
          path: target/release/${{ matrix.sidecar }}.(pdb|dwp)
          retention-days: 1

  commit:
    permissions:
      contents: write
    needs: build
    runs-on: ubuntu-latest
    if: inputs.app-version == ''
    steps:
      - uses: actions/checkout@v5
        with:
          token: ${{ secrets.EMBROIDERLY_PAT }}

      - run: mkdir -p app/src-tauri/binaries
      - run: rm -rf app/src-tauri/binaries/*

      - name: Download all artifacts
        uses: actions/download-artifact@v5
        with:
          path: app/src-tauri/binaries/
          merge-multiple: true

      - name: Import GPG key
        id: gpg
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.EMBROIDERLY_GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.EMBROIDERLY_GPG_PASSPHRASE }}
          git_user_signingkey: true
          git_commit_gpgsign: true

      - name: Commit binaries
        uses: stefanzweifel/git-auto-commit-action@v6
        with:
          file_pattern: app/src-tauri/binaries/**
          commit_message: "build: update sidecar binaries"
          commit_author: "${{ steps.gpg.outputs.name }} <${{ steps.gpg.outputs.email }}>"
          commit_user_name: ${{ steps.gpg.outputs.name }}
          commit_user_email: ${{ steps.gpg.outputs.email }}
          push_options: "--force"

  sentry:
    needs: build
    runs-on: ubuntu-latest
    if: inputs.app-version != ''
    strategy:
      fail-fast: false
      matrix:
        sidecar: ["embroiderly-publish"]
    defaults:
      run:
        shell: bash
    env:
      SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
      SENTRY_ORG: embroidery-space
      SENTRY_PROJECT: ${{ matrix.sidecar }}
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v5
        with:
          node-version-file: package.json
      - uses: pnpm/action-setup@v4

      - name: Install Sentry CLI
        run: pnpm install -g @sentry/cli

      - name: Create Sentry release
        run: |
          sentry-cli releases new "${{ inputs.app-version }}"
          sentry-cli releases set-commits "${{ inputs.app-version }}" --auto || true

      - name: Download debug symbols
        uses: actions/download-artifact@v4
        with:
          pattern: sidecar-debug-symbols-${{ matrix.sidecar }}-*
          merge-multiple: true

      - name: Upload debug symbols to Sentry
        run: |
          find . -name "${{ matrix.sidecar }}.pdb" -exec sentry-cli debug-files upload --release="${{ inputs.app-version }}" {} + || true
          find . -name "${{ matrix.sidecar }}.dwp" -exec sentry-cli debug-files upload --release="${{ inputs.app-version }}" {} + || true

      - name: Finalize Sentry release
        run: sentry-cli releases finalize "${{ inputs.app-version }}"
